// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository.Model;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(HighSchoolStudentExamScoreContext))]
    [Migration("20240118030637_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Repository.Model.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("province_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProvinceId"));

                    b.Property<string>("ProvinceName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("province_name");

                    b.HasKey("ProvinceId")
                        .HasName("provinces_pkey");

                    b.ToTable("provinces", (string)null);
                });

            modelBuilder.Entity("Repository.Model.Score", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.Property<decimal?>("Score1")
                        .HasColumnType("numeric")
                        .HasColumnName("score");

                    b.HasKey("StudentId", "SubjectId", "Year")
                        .HasName("scores_pkey");

                    b.HasIndex("SubjectId");

                    b.ToTable("scores", (string)null);
                });

            modelBuilder.Entity("Repository.Model.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("integer")
                        .HasColumnName("province_id");

                    b.HasKey("StudentId")
                        .HasName("students_pkey");

                    b.HasIndex("ProvinceId");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("Repository.Model.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("subject_name");

                    b.HasKey("SubjectId")
                        .HasName("subjects_pkey");

                    b.ToTable("subjects", (string)null);
                });

            modelBuilder.Entity("Repository.Model.Score", b =>
                {
                    b.HasOne("Repository.Model.Student", "Student")
                        .WithMany("Scores")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("scores_student_id_fkey");

                    b.HasOne("Repository.Model.Subject", "Subject")
                        .WithMany("Scores")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("scores_subject_id_fkey");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Repository.Model.Student", b =>
                {
                    b.HasOne("Repository.Model.Province", "Province")
                        .WithMany("Students")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("students_province_id_fkey");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Repository.Model.Province", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Repository.Model.Student", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("Repository.Model.Subject", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
